{
  "contractName": "RockPapperScissors",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "ticketToOwner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isPauser",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renouncePauser",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addPauser",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_count",
          "type": "uint8"
        }
      ],
      "name": "setMaxiumPlayerTicketCount",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "globalRevealDeadline",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_fee",
          "type": "uint256"
        }
      ],
      "name": "setTicketFee",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "ticketBox",
      "outputs": [
        {
          "name": "ticketNumber",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "globalPlayDeadline",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "PauserAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "PauserRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "ticketId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "ticketNumber",
          "type": "uint256"
        }
      ],
      "name": "NewTicket",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    }
  ],
  "bytecode": "0x608060405266038d7ea4c680006001556003600260006101000a81548160ff021916908360ff1602179055506003336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a361010133610143640100000000026401000000009004565b6000600860006101000a81548160ff02191690831515021790555080600b60006101000a81548163ffffffff021916908363ffffffff160217905550506102fd565b6101648160076101aa64010000000002610b14179091906401000000009004565b8073ffffffffffffffffffffffffffffffffffffffff167f6719d08c1888103bea251a4ed56406bd0c3e69723c8a1686e017e7bbe159b6f860405160405180910390a250565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515156101e657600080fd5b6101ff8282610269640100000000026401000000009004565b15151561020b57600080fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141515156102a657600080fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b610bf08061030c6000396000f3006080604052600436106100e6576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680632b08e824146100eb5780633f4ba83a1461015857806346fbf68e1461016f5780635c975abb146101ca5780636ef8d66d146101f9578063715018a61461021057806382dc1ec4146102275780638456cb591461026a578063874928c31461028157806389cd9516146102b15780638da5cb5b146102dc5780638f32d59b14610333578063b2105f4214610362578063c15ebda81461038f578063ece03d6f146103d0578063f2fde38b146103fb575b600080fd5b3480156100f757600080fd5b506101166004803603810190808035906020019092919050505061043e565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561016457600080fd5b5061016d610471565b005b34801561017b57600080fd5b506101b0600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610520565b604051808215151515815260200191505060405180910390f35b3480156101d657600080fd5b506101df61053d565b604051808215151515815260200191505060405180910390f35b34801561020557600080fd5b5061020e610554565b005b34801561021c57600080fd5b5061022561055f565b005b34801561023357600080fd5b50610268600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610631565b005b34801561027657600080fd5b5061027f610651565b005b34801561028d57600080fd5b506102af600480360381019080803560ff169060200190929190505050610701565b005b3480156102bd57600080fd5b506102c6610732565b6040518082815260200191505060405180910390f35b3480156102e857600080fd5b506102f1610738565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561033f57600080fd5b50610348610761565b604051808215151515815260200191505060405180910390f35b34801561036e57600080fd5b5061038d600480360381019080803590602001909291905050506107b8565b005b34801561039b57600080fd5b506103ba600480360381019080803590602001909291905050506107d5565b6040518082815260200191505060405180910390f35b3480156103dc57600080fd5b506103e56107fe565b6040518082815260200191505060405180910390f35b34801561040757600080fd5b5061043c600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610804565b005b60046020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61047a33610520565b151561048557600080fd5b600860009054906101000a900460ff1615156104a057600080fd5b6000600860006101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa33604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a1565b600061053682600761082390919063ffffffff16565b9050919050565b6000600860009054906101000a900460ff16905090565b61055d336108b7565b565b610567610761565b151561057257600080fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b61063a33610520565b151561064557600080fd5b61064e81610911565b50565b61065a33610520565b151561066557600080fd5b600860009054906101000a900460ff1615151561068157600080fd5b6001600860006101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25833604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a1565b610709610761565b151561071457600080fd5b80600260006101000a81548160ff021916908360ff16021790555050565b600a5481565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b6107c0610761565b15156107cb57600080fd5b8060018190555050565b6003818154811015156107e457fe5b906000526020600020016000915090508060000154905081565b60095481565b61080c610761565b151561081757600080fd5b6108208161096b565b50565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415151561086057600080fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6108cb816007610a6590919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167fcd265ebaf09df2871cc7bd4133404a235ba12eff2041bb89d9c714a2621c7c7e60405160405180910390a250565b610925816007610b1490919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f6719d08c1888103bea251a4ed56406bd0c3e69723c8a1686e017e7bbe159b6f860405160405180910390a250565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515156109a757600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515610aa157600080fd5b610aab8282610823565b1515610ab657600080fd5b60008260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515610b5057600080fd5b610b5a8282610823565b151515610b6657600080fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050505600a165627a7a72305820c3551bfa4bd48e2f20f37c1bb45bbaf161ed0291f184f7b356e3aa83070af5ed0029",
  "deployedBytecode": "0x6080604052600436106100e6576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680632b08e824146100eb5780633f4ba83a1461015857806346fbf68e1461016f5780635c975abb146101ca5780636ef8d66d146101f9578063715018a61461021057806382dc1ec4146102275780638456cb591461026a578063874928c31461028157806389cd9516146102b15780638da5cb5b146102dc5780638f32d59b14610333578063b2105f4214610362578063c15ebda81461038f578063ece03d6f146103d0578063f2fde38b146103fb575b600080fd5b3480156100f757600080fd5b506101166004803603810190808035906020019092919050505061043e565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561016457600080fd5b5061016d610471565b005b34801561017b57600080fd5b506101b0600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610520565b604051808215151515815260200191505060405180910390f35b3480156101d657600080fd5b506101df61053d565b604051808215151515815260200191505060405180910390f35b34801561020557600080fd5b5061020e610554565b005b34801561021c57600080fd5b5061022561055f565b005b34801561023357600080fd5b50610268600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610631565b005b34801561027657600080fd5b5061027f610651565b005b34801561028d57600080fd5b506102af600480360381019080803560ff169060200190929190505050610701565b005b3480156102bd57600080fd5b506102c6610732565b6040518082815260200191505060405180910390f35b3480156102e857600080fd5b506102f1610738565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561033f57600080fd5b50610348610761565b604051808215151515815260200191505060405180910390f35b34801561036e57600080fd5b5061038d600480360381019080803590602001909291905050506107b8565b005b34801561039b57600080fd5b506103ba600480360381019080803590602001909291905050506107d5565b6040518082815260200191505060405180910390f35b3480156103dc57600080fd5b506103e56107fe565b6040518082815260200191505060405180910390f35b34801561040757600080fd5b5061043c600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610804565b005b60046020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61047a33610520565b151561048557600080fd5b600860009054906101000a900460ff1615156104a057600080fd5b6000600860006101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa33604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a1565b600061053682600761082390919063ffffffff16565b9050919050565b6000600860009054906101000a900460ff16905090565b61055d336108b7565b565b610567610761565b151561057257600080fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b61063a33610520565b151561064557600080fd5b61064e81610911565b50565b61065a33610520565b151561066557600080fd5b600860009054906101000a900460ff1615151561068157600080fd5b6001600860006101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25833604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a1565b610709610761565b151561071457600080fd5b80600260006101000a81548160ff021916908360ff16021790555050565b600a5481565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b6107c0610761565b15156107cb57600080fd5b8060018190555050565b6003818154811015156107e457fe5b906000526020600020016000915090508060000154905081565b60095481565b61080c610761565b151561081757600080fd5b6108208161096b565b50565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415151561086057600080fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6108cb816007610a6590919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167fcd265ebaf09df2871cc7bd4133404a235ba12eff2041bb89d9c714a2621c7c7e60405160405180910390a250565b610925816007610b1490919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f6719d08c1888103bea251a4ed56406bd0c3e69723c8a1686e017e7bbe159b6f860405160405180910390a250565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515156109a757600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515610aa157600080fd5b610aab8282610823565b1515610ab657600080fd5b60008260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515610b5057600080fd5b610b5a8282610823565b151515610b6657600080fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050505600a165627a7a72305820c3551bfa4bd48e2f20f37c1bb45bbaf161ed0291f184f7b356e3aa83070af5ed0029",
  "sourceMap": "192:90:3:-;;;293:11:4;276:28;;342:1;310:33;;;;;;;;;;;;;;;;;;;;231:1:3;518:10:10;509:6;;:19;;;;;;;;;;;;;;;;;;572:6;;;;;;;;;;;539:40;;568:1;539:40;;;;;;;;;;;;260:22:6;271:10;260;;;:22;;;:::i;:::-;350:5:7;340:7;;:15;;;;;;;;;;;;;;;;;;622:18:0;602:17;;:38;;;;;;;;;;;;;;;;;;545:100;192:90:3;;629:108:6;681:20;693:7;681;:11;;;;;;:20;;;;;:::i;:::-;724:7;712:20;;;;;;;;;;;;629:108;:::o;244:167:5:-;335:1;316:21;;:7;:21;;;;308:30;;;;;;;;353:18;357:4;363:7;353:3;;;:18;;;:::i;:::-;352:19;344:28;;;;;;;;402:4;379;:11;;:20;391:7;379:20;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;244:167;;:::o;725:166::-;809:4;850:1;831:21;;:7;:21;;;;823:30;;;;;;;;866:4;:11;;:20;878:7;866:20;;;;;;;;;;;;;;;;;;;;;;;;;859:27;;725:166;;;;:::o;192:90:3:-;;;;;;;",
  "deployedSourceMap": "192:90:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;488:46:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;488:46:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1085:105:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1085:105:7;;;;;;364:100:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;364:100:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;438:69:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;438:69:7;;;;;;;;;;;;;;;;;;;;;;;;;;;556::6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;556:69:6;;;;;;1273:127:10;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1273:127:10;;;;;;468:84:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;468:84:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;900:103:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;900:103:7;;;;;;1095:118:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1095:118:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;304:32:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;304:32:0;;;;;;;;;;;;;;;;;;;;;;;639:70:10;;8:9:-1;5:2;;;30:1;27;20:12;5:2;639:70:10;;;;;;;;;;;;;;;;;;;;;;;;;;;926:83;;8:9:-1;5:2;;;30:1;27;20:12;5:2;926:83:10;;;;;;;;;;;;;;;;;;;;;;;;;;;1005:85:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1005:85:4;;;;;;;;;;;;;;;;;;;;;;;;;;457:25;;8:9:-1;5:2;;;30:1;27;20:12;5:2;457:25:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;270:30:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;270:30:0;;;;;;;;;;;;;;;;;;;;;;;1561:101:10;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1561:101:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;488:46:4;;;;;;;;;;;;;;;;;;;;;;:::o;1085:105:7:-;327:20:6;336:10;327:8;:20::i;:::-;319:29;;;;;;;;801:7:7;;;;;;;;;;;793:16;;;;;;;;1149:5;1139:7;;:15;;;;;;;;;;;;;;;;;;1165:20;1174:10;1165:20;;;;;;;;;;;;;;;;;;;;;;1085:105::o;364:100:6:-;420:4;439:20;451:7;439;:11;;:20;;;;:::i;:::-;432:27;;364:100;;;:::o;438:69:7:-;476:4;495:7;;;;;;;;;;;488:14;;438:69;:::o;556::6:-;595:25;609:10;595:13;:25::i;:::-;556:69::o;1273:127:10:-;824:9;:7;:9::i;:::-;816:18;;;;;;;;1367:1;1330:40;;1351:6;;;;;;;;;;;1330:40;;;;;;;;;;;;1393:1;1376:6;;:19;;;;;;;;;;;;;;;;;;1273:127::o;468:84:6:-;327:20;336:10;327:8;:20::i;:::-;319:29;;;;;;;;528:19;539:7;528:10;:19::i;:::-;468:84;:::o;900:103:7:-;327:20:6;336:10;327:8;:20::i;:::-;319:29;;;;;;;;648:7:7;;;;;;;;;;;647:8;639:17;;;;;;;;965:4;955:7;;:14;;;;;;;;;;;;;;;;;;980:18;987:10;980:18;;;;;;;;;;;;;;;;;;;;;;900:103::o;1095:118:4:-;824:9:10;:7;:9::i;:::-;816:18;;;;;;;;1200:6:4;1174:23;;:32;;;;;;;;;;;;;;;;;;1095:118;:::o;304:32:0:-;;;;:::o;639:70:10:-;676:7;698:6;;;;;;;;;;;691:13;;639:70;:::o;926:83::-;965:4;998:6;;;;;;;;;;;984:20;;:10;:20;;;977:27;;926:83;:::o;1005:85:4:-;824:9:10;:7;:9::i;:::-;816:18;;;;;;;;1079:4:4;1067:9;:16;;;;1005:85;:::o;457:25::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;270:30:0:-;;;;:::o;1561:101:10:-;824:9;:7;:9::i;:::-;816:18;;;;;;;;1629:28;1648:8;1629:18;:28::i;:::-;1561:101;:::o;725:166:5:-;809:4;850:1;831:21;;:7;:21;;;;823:30;;;;;;;;866:4;:11;;:20;878:7;866:20;;;;;;;;;;;;;;;;;;;;;;;;;859:27;;725:166;;;;:::o;741:116:6:-;796:23;811:7;796;:14;;:23;;;;:::i;:::-;844:7;830:22;;;;;;;;;;;;741:116;:::o;629:108::-;681:20;693:7;681;:11;;:20;;;;:::i;:::-;724:7;712:20;;;;;;;;;;;;629:108;:::o;1796:169:10:-;1885:1;1865:22;;:8;:22;;;;1857:31;;;;;;;;1928:8;1899:38;;1920:6;;;;;;;;;;;1899:38;;;;;;;;;;;;1952:8;1943:6;;:17;;;;;;;;;;;;;;;;;;1796:169;:::o;477:170:5:-;571:1;552:21;;:7;:21;;;;544:30;;;;;;;;588:18;592:4;598:7;588:3;:18::i;:::-;580:27;;;;;;;;637:5;614:4;:11;;:20;626:7;614:20;;;;;;;;;;;;;;;;:28;;;;;;;;;;;;;;;;;;477:170;;:::o;244:167::-;335:1;316:21;;:7;:21;;;;308:30;;;;;;;;353:18;357:4;363:7;353:3;:18::i;:::-;352:19;344:28;;;;;;;;402:4;379;:11;;:20;391:7;379:20;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;244:167;;:::o",
  "source": "pragma solidity ^0.4.24;\n\nimport './Lottery.sol';\n\n/*\n// 참조: https://github.com/jbartual/b9U4RockPaperScissors\nRules:\n    Rock > Scissors > Paper > Rock\n    0      1          2       0\n*/\ncontract RockPapperScissors is Lottery(3) {\n    enum Hand {NONE, Rock, Scissors, Paper}\n\n}\n",
  "sourcePath": "/Users/we/tron-project/jLottery/contracts/RockPapperScissors.sol",
  "ast": {
    "absolutePath": "/Users/we/tron-project/jLottery/contracts/RockPapperScissors.sol",
    "exportedSymbols": {
      "RockPapperScissors": [
        159
      ]
    },
    "id": 160,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 149,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:3"
      },
      {
        "absolutePath": "/Users/we/tron-project/jLottery/contracts/Lottery.sol",
        "file": "./Lottery.sol",
        "id": 150,
        "nodeType": "ImportDirective",
        "scope": 160,
        "sourceUnit": 52,
        "src": "26:23:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": [
              {
                "argumentTypes": null,
                "hexValue": "33",
                "id": 152,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "231:1:3",
                "subdenomination": null,
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_3_by_1",
                  "typeString": "int_const 3"
                },
                "value": "3"
              }
            ],
            "baseName": {
              "contractScope": null,
              "id": 151,
              "name": "Lottery",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 51,
              "src": "223:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Lottery_$51",
                "typeString": "contract Lottery"
              }
            },
            "id": 153,
            "nodeType": "InheritanceSpecifier",
            "src": "223:10:3"
          }
        ],
        "contractDependencies": [
          51,
          278,
          475,
          558,
          864
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 159,
        "linearizedBaseContracts": [
          159,
          51,
          558,
          475,
          278,
          864
        ],
        "name": "RockPapperScissors",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "RockPapperScissors.Hand",
            "id": 158,
            "members": [
              {
                "id": 154,
                "name": "NONE",
                "nodeType": "EnumValue",
                "src": "251:4:3"
              },
              {
                "id": 155,
                "name": "Rock",
                "nodeType": "EnumValue",
                "src": "257:4:3"
              },
              {
                "id": 156,
                "name": "Scissors",
                "nodeType": "EnumValue",
                "src": "263:8:3"
              },
              {
                "id": 157,
                "name": "Paper",
                "nodeType": "EnumValue",
                "src": "273:5:3"
              }
            ],
            "name": "Hand",
            "nodeType": "EnumDefinition",
            "src": "240:39:3"
          }
        ],
        "scope": 160,
        "src": "192:90:3"
      }
    ],
    "src": "0:283:3"
  },
  "legacyAST": {
    "absolutePath": "/Users/we/tron-project/jLottery/contracts/RockPapperScissors.sol",
    "exportedSymbols": {
      "RockPapperScissors": [
        159
      ]
    },
    "id": 160,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 149,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:3"
      },
      {
        "absolutePath": "/Users/we/tron-project/jLottery/contracts/Lottery.sol",
        "file": "./Lottery.sol",
        "id": 150,
        "nodeType": "ImportDirective",
        "scope": 160,
        "sourceUnit": 52,
        "src": "26:23:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": [
              {
                "argumentTypes": null,
                "hexValue": "33",
                "id": 152,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "231:1:3",
                "subdenomination": null,
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_3_by_1",
                  "typeString": "int_const 3"
                },
                "value": "3"
              }
            ],
            "baseName": {
              "contractScope": null,
              "id": 151,
              "name": "Lottery",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 51,
              "src": "223:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Lottery_$51",
                "typeString": "contract Lottery"
              }
            },
            "id": 153,
            "nodeType": "InheritanceSpecifier",
            "src": "223:10:3"
          }
        ],
        "contractDependencies": [
          51,
          278,
          475,
          558,
          864
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 159,
        "linearizedBaseContracts": [
          159,
          51,
          558,
          475,
          278,
          864
        ],
        "name": "RockPapperScissors",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "RockPapperScissors.Hand",
            "id": 158,
            "members": [
              {
                "id": 154,
                "name": "NONE",
                "nodeType": "EnumValue",
                "src": "251:4:3"
              },
              {
                "id": 155,
                "name": "Rock",
                "nodeType": "EnumValue",
                "src": "257:4:3"
              },
              {
                "id": 156,
                "name": "Scissors",
                "nodeType": "EnumValue",
                "src": "263:8:3"
              },
              {
                "id": 157,
                "name": "Paper",
                "nodeType": "EnumValue",
                "src": "273:5:3"
              }
            ],
            "name": "Hand",
            "nodeType": "EnumDefinition",
            "src": "240:39:3"
          }
        ],
        "scope": 160,
        "src": "192:90:3"
      }
    ],
    "src": "0:283:3"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.24+commit.e67f0147.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.0",
  "updatedAt": "2018-12-21T03:51:26.304Z",
  "devdoc": {
    "methods": {
      "isOwner()": {
        "return": "true if `msg.sender` is the owner of the contract."
      },
      "owner()": {
        "return": "the address of the owner."
      },
      "pause()": {
        "details": "called by the owner to pause, triggers stopped state"
      },
      "paused()": {
        "return": "true if the contract is paused, false otherwise."
      },
      "renounceOwnership()": {
        "details": "Allows the current owner to relinquish control of the contract."
      },
      "transferOwnership(address)": {
        "details": "Allows the current owner to transfer control of the contract to a newOwner.",
        "params": {
          "newOwner": "The address to transfer ownership to."
        }
      },
      "unpause()": {
        "details": "called by the owner to unpause, returns to normal state"
      }
    }
  },
  "userdoc": {
    "methods": {
      "renounceOwnership()": {
        "notice": "Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore."
      }
    }
  }
}